services:
  main_service:
    container_name: main_service
    build: ./main_service
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - ./main_service/.env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: bash -c 'curl -f http://main_service:8000/ping'
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 3s

  log_service_api:
    container_name: log_service_api
    build: ./log_service
    restart: unless-stopped
    command: python -m app.main.main
    env_file:
      - ./log_service/.env
    depends_on:
      main_service:
        condition: service_healthy
      mongo:
        condition: service_healthy

  log_service_consumer:
    container_name: log_service_consumer
    build: ./log_service
    restart: unless-stopped
    command: python -m app.main.worker
    env_file:
      - ./log_service/.env
    depends_on:
      main_service:
        condition: service_healthy
      kafka:
        condition: service_started

  postgres:
    container_name: postgres
    image: postgres:15-alpine
    restart: unless-stopped
    env_file:
      - ./main_service/.env
    volumes:
      - pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -d postgres' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 3s

  mongo:
    container_name: mongo
    image: mongo
    restart: unless-stopped
    env_file:
      - ./log_service/.env
    volumes:
      - ./log_service/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo_data:/data/db/
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 2s

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
volumes:
  pg_data:
  mongo_data:
